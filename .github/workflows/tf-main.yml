name: 'Terraform'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-west-1

permissions:
  id-token: write
  contents: read
  pull-requests: 'write'

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        environment: [staging, production]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: ${{ secrets.AW_OIDC_ROLE}}
        role-session-name: FederatedOIDC-Role
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform fmt
      id: fmt
      run: terraform -chdir=./infra fmt -check
      continue-on-error: true
      
    - name: Terraform Init
      id: init
      env:
        AWS_BUCKET_NAME: ${{ secrets.BACKEND_BUCKET_NAME}}
        AWS_BUCKET_KEY: ${{ secrets.BACKEND_KEY}}
      run: terraform -chdir=./infra init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY}" -backend-config="region=${AWS_REGION}"

    - name: Select workspace
      id: workspace
      run: terraform -chdir=./infra workspace select ${{ matrix.environment }}

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=./infra validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform -chdir=./infra plan -no-color
      continue-on-error: true
    
    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Validation Output</summary>
    
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
    
          </details>
    
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    
          <details><summary>Show Plan</summary>
    
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
    
          </details>
    
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
