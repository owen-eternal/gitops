name: 'Terraform'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-west-1

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
        matrix:
            workflow: [production]
    environment: ${{ matrix.workflow }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: ${{ secrets.GH_OIDC_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.TF_MODULE_PRIVATE_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform fmt
      id: fmt
      run: terraform -chdir=./infra fmt -check
      continue-on-error: true
    
    - name: list workspace
      run: terraform -chdir=./infra workspace list
      
    # - name: Terraform Init
    #   id: init
    #   env:
    #     AWS_BUCKET_NAME: ${{ secrets.BACKEND_BUCKET_NAME}}
    #     AWS_BUCKET_KEY: ${{ secrets.BACKEND_KEY}}
    #   run: terraform -chdir=./infra init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY}" -backend-config="region=${AWS_REGION}"

    # - name: Select workspace
    #   id: workspace${{ matrix.workflow }}
    #   run: terraform -chdir=./infra workspace select ${{ matrix.workflow }}

    # - name: Terraform Validate
    #   id: validate
    #   run: terraform -chdir=./infra validate -no-color 
    #   continue-on-error: true

    # - name: Terraform Plan
    #   id: plan
    #   env:
    #     TF_VAR_database: ${{ vars.TF_VAR_DATABASE }}
    #     TF_VAR_ipaddr: ${{ vars.TF_VAR_IPADDR }}
    #   run: terraform -chdir=./infra plan
    #   continue-on-error: true
    
    # - uses: actions/github-script@v6
    #   if: github.event_name == 'pull_request'
    #   with:
    #     script: |
    #       const output = `#### Terraform Workspace üìñ\`${{ matrix.environment }}\`
    #       #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
    #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
    #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
    #       <details><summary>Validation Output</summary>
    
    #       \`\`\`\n
    #       terraform\n${{ steps.validate.outputs.stdout }}
    #       \`\`\`
    
    #       </details>
    
    #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    #       <details><summary>Show Plan</summary>
    
    #       \`\`\`\n
    #       terraform\n${{ steps.plan.outputs.stdout }}
    #       \`\`\`
    
    #       </details>
    
    #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
    #       github.rest.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: output
    #       })

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform -chdir=./infra destroy -auto-approve -input=false